---
layout: post
date: 2018-09-22
tags: omscs
feelings: happy
title: omscs computer networking project 3 review
comments: true
description: boom boom
---

this post is private until otherwise cleared



continuing a tradition i started in @288:



this task was easier after the stressfulness of project 2. i knew the basics of distributed algos now and there was no reflection in this project - there is just a dirty flag and a refresh of all outbound nodes.



after the first 2-3 passes i think i managed to get a couple of the Topos working, but in Topos with negative infinite loops, the negative infinite loops kept propagating to other nodes (like if AA - CC was -99, that would spread out and infect the other nodes connected to AA).



This might sorta kinda make sense if -99 were a real value but because it is a fake "infinity value" i wrote code to prevent propagation of -99. also if you have a situation where -99 + 5 it has to equal -99 because it is "fake negative infinity".



that solved the rest of the cases and that was pretty much that. stacia kept referring to replicating the excel spreadsheet but the google docs didn't open for me and i didnt bother to download and install excel because i had solved it by then.



The instructions around how logging was connected with output validation were very unclear. the previous project just validated against the final state, whereas here there was a lot of logging against all the intermediate state. that was only mentioned in the piazza comments, but i feel that something as important as this should be more prominent in the instructions or at least code comments. i dislike having to hunt around a dozen possibly relevant posts on piazza for critical nuggets of info when there's already two pdf's provided with instructions.



and because there are "infinite" loops, that's a lot of logs and it can spam the console among the other stuff you are actually printing to debug. I could control the result logging in my code, but it definitely took way too long to figure out (1-2hrs?) compared to actually working on the algorithm that matters. As a result of the messiness of having intentional infinite loops that are validated against, intensive logging like i did in p2 was not useful. instead i just read other people's comments on how they solved problems like the -99 spreading and just implemented their words into code. not a very satisfactory project compared to p2, this one felt very much like "coding to the assignment" rather than having as close of a tie to the theory we were supposed to cover.



sorry if this sounds whiny, i still super appreciate the projects and opportunity to work on them.
